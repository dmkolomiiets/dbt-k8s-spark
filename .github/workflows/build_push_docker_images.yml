name: 'Publish To AWS'

on:
  workflow_dispatch:
  push:
    branches:
      - 'feature-*'
      - 'bugfix-*'
    tags:
      - '*'

permissions:
  contents: read
  id-token: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  publish-images:
    environment: production_account
    runs-on: ubuntu-20.04
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'

#      - name: Build with Gradle
#        run: ./gradlew build

      - name: Installing AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.3
        with:
          version: "2.8.5"

      - name: Configure AWS credentials for provisioning development
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.PROVISIONING_AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR provisioning development
        id: login-ecr-provisioning
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR Repository
        env:
          AWS_ACCOUNT: ${{ steps.login-ecr-provisioning.outputs.registry }}
          AWS_REGION: us-east-1
          REPO_NAME: arcadia-hudi-deltastreamer-exports
        run: |
          aws ecr create-repository --repository-name $REPO_NAME --region $AWS_REGION || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/*/})" >>$GITHUB_OUTPUT
        id: extract_branch

      - name: Build, tag, push images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr-provisioning.outputs.registry }}/arcadia-hudi-deltastreamer-exports:${{ steps.extract_branch.outputs.branch }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
