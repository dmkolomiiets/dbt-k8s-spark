# This is a basic workflow to help you get started with Actions

name: CI
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      mymatrix: ${{ steps.dataStep.outputs.mymatrix }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Read tests folder'
        id: dataStep
        run: |
          env
          echo "mymatrix=[$(find ./src/test/resources/com/arcadia/tahoe/features/* -maxdepth 1 -type d -exec basename {} \; | grep -v '^.$' | sed 's/.*/\"&\"/' | tr '\n' ',' | sed 's/,$//')]" >> $GITHUB_OUTPUT
  run-test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.setup.outputs.mymatrix) }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Installing AWS CLI
        uses: unfor19/install-aws-cli-action@v1.0.3
        with:
          version: "2.8.5"

      - name: Configure AWS credentials for provisioning development
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::498769975733:role/github-action-tahoe-etl'
          aws-region: us-east-1
      - name: Configure other AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: 'arn:aws:iam::498769975733:role/preprd-data-processing_admin'
          role-session-name: MySessionName
          role-chaining: true
      - name: Setup env
        run: |
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb
      - uses: arcadia/devx-actions/gradle/setup@v0.0.8
        with:
          java-version: 17
      - uses: arcadia/devx-actions/gradle/build@v0.0.8
        env:
          CLUSTER_NAME: ${{vars.CLUSTER_NAME}}
          CLUSTER_REGION: ${{vars.CLUSTER_REGION}}
          REPORTING_BUCKET: ${{vars.REPORTING_BUCKET}}
          REPORTING_BUCKET_REGION: ${{vars.REPORTING_BUCKET_REGION}}
          FEATURE_DIR: ${{matrix.target}}
        with:
          build-cmd: -d feature
          NEXUS_USERNAME: ""
          NEXUS_PASSWORD: ""
      - name: Publish JUnit Report
        if: ${{ (success() || failure()) }}
        uses: mikepenz/action-junit-report@v4
        with:
          check_name: 'Test Report: ${{matrix.target}}'
          include_passed: true
          detailed_summary: true
          report_paths: '**/build/test-results/test/TEST-*.xml'
